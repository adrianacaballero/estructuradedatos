// Banco.Herencia.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "Cuenta.h"
#include <iostream>
#include <string>
#include "conio.h"
 using namespace std;

void main ()
{ Cuenta C1;
  C1.AsignarNombre("Alicia");
  C1.AsignarCuenta("6333182");
  C1.AsignarTipoDeInteres(2.5);
  
  C1.Ingreso(30000);
  C1.Reintegro(10000);

  cout<<"\nNombre : "<<C1.ObtenerNombre()<<endl;
  cout<<"Nro de cuenta : "<<C1.ObtenerCuenta()<<endl;
  cout<<"Saldo : "<<C1.Estado()<<endl;
  cout<<"tipo de interes : "<<C1.ObtenerTipoDeInteres()<<endl;
	getch();
}



#pragma once
#include <string>
 using namespace std;
class Cuenta
{
protected:
	double TipoDeInteres, saldo;
	string cuenta, nombre;
public:
	Cuenta();
	Cuenta (string nom,string cuen, double sal, double tipo);
	~Cuenta();
	void AsignarNombre (string nom);
	string ObtenerNombre();
	void AsignarCuenta (string cue);
	string ObtenerCuenta ();
	void AsignarTipoDeInteres(double tipo);
	double ObtenerTipoDeInteres();
	void Reintegro(double cantidad);
	void Ingreso(double cantidad);
	double Estado();
};


#include "StdAfx.h"
#include "Cuenta.h"
#include <string>
#include <iostream>
 using namespace std;

Cuenta::Cuenta()
{ saldo = 0 ;
  TipoDeInteres = 0.0;
}

Cuenta::Cuenta(string nom,string cuen, double sal, double tipo)
{ AsignarNombre(nom);
  AsignarCuenta(cuen);
  saldo = sal;
  TipoDeInteres = tipo;
}

Cuenta::~Cuenta()
{
}

void Cuenta::AsignarNombre(string nom)
{ if (nom.length()==0)
    { cout<<"Error : cadena vacia "<<endl;
      return ;
    }
  nombre = nom;
}
string Cuenta::ObtenerNombre()
{ return nombre ;}

void Cuenta::AsignarCuenta(string cuen)
{ if (cuen.length()==0)
    { cout<<"Error : cadena vacia "<<endl;
      return ;
    }
 cuenta = cuen ;
}
string Cuenta::ObtenerCuenta()
{ return cuenta ;}

void Cuenta::AsignarTipoDeInteres(double tipo)
{ if (tipo<0)
    {cout<<"Error : tipo de interes negativo ";
     return ;
    }
 TipoDeInteres = tipo;
}
double Cuenta::ObtenerTipoDeInteres()
{ return TipoDeInteres ;}

void Cuenta::Reintegro(double cantidad)
{ if (saldo - cantidad < 0 )
    { cout<<"Error: no dispone de saldo "<<endl;
      return;
    }
  saldo = saldo - cantidad ;//
}

void Cuenta::Ingreso(double cantidad)
{ if (cantidad<0)
    { cout<<"Error cantidad negativa"<<endl;
      return ;
    }
  saldo = saldo + cantidad ;
}

double Cuenta::Estado()
{ return saldo;}

#pragma once
#include "Cuenta.h"
class CuentaAhorro : public Cuenta 
{
private:
	double CuotaMantenimiento ;
public:
	CuentaAhorro(string nom,string cuen, double sal, double tipo, double mant);
	~CuentaAhorro(void);
	void AsignarCuotaMantenimiento(double cantidad);
	double ObtenerCuotaMantenimiento();
	void Reintegro(double cantidad);
};

#include "StdAfx.h"
#include "CuentaAhorro.h"

CuentaAhorro::CuentaAhorro(string nom,string cuen, double sal, double tipo, double mant)
{ AsignarNombre(nom);
  AsignarCuenta(cuen);
  saldo = sal;
  TipoDeInteres = tipo;
  AsignarCuotaMantenimiento(mant);
}

CuentaAhorro::~CuentaAhorro(void)
{
}

void CuentaAhorro::AsignarCuotaMantenimiento(double cantidad)
{ if (cantidad < 0)
    { cout<<"Error : cuota de mantenimiento negativa ";
      return ;
    }
 CuotaMantenimiento = cantidad ;
}

double CuentaAhorro::ObtenerCuotaMantenimiento()
{return CuotaMantenimiento ; }

